{"version":3,"file":"static/js/459.f06099b3.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/shared/TextField/text-field.module.css?05ad","components/shared/TextField/TextField.jsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/nanoid/index.browser.js","hooks/useForm.js","components/modules/RegisterForm/initialState.js","components/modules/RegisterForm/fields.js","webpack://react-homework-template/./src/components/modules/RegisterForm/register-form.module.css?4ac4","webpack://react-homework-template/./src/components/shared/Button/button.module.css?30fa","components/shared/Button/Button.jsx","components/modules/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"text-field_wrapper__F5-wH\",\"label\":\"text-field_label__7jSYo\",\"input\":\"text-field_input__zcppx\"};","import { useMemo } from 'react';\nimport { nanoid } from 'nanoid';\nimport css from './text-field.module.css';\n\nconst TextInput = ({ label, handleChange, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n  return (\n    <div className={css.wrapper}>\n      <label htmlFor={id} className={css.label}>{label}</label>\n      <input id={id} onChange={handleChange} {...props} className={css.input} />\n    </div>\n  );\n};\n\nexport default TextInput;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { useState } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    setState(prevState => {\n      const { name, value, type, checked } = target;\n      const newValue = type === 'chekbox' ? checked : value;\n\n      return { ...prevState, [name]: newValue };\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\nexport default useForm;\n","const initialState = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n}\n\nexport default initialState;","const fields = {\n  name: {\n    type: 'text',\n    required: true,\n    autoComplete: 'off',\n    placeholder: 'Name',\n    label: 'User name',\n  },\n  email: {\n    type: 'text',\n    required: true,\n    autoComplete: 'off',\n    placeholder: 'Email',\n    label: 'User email',\n  },\n  password: {\n    type: 'text',\n    required: true,\n    autoComplete: 'off',\n    placeholder: 'Password',\n    label: 'User password',\n  },\n};\n\nexport default fields;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"register-form_form__7sl83\"};","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"button_btn__zbgd-\"};","import css from './button.module.css';\n\nconst Button = ({ children, type = 'submit' }) => {\n  return (\n    <button type={type} className={css.btn}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import TextInput from 'components/shared/TextField/TextField';\nimport useForm from 'hooks/useForm';\nimport initialState from './initialState';\nimport fields from './fields';\nimport css from './register-form.module.css';\nimport Button from 'components/shared/Button/Button';\n\nconst RegisterForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n  const { name, email, password } = state;\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={css.form}>\n        <TextInput value={name} handleChange={handleChange} {...fields.name} />\n        <TextInput\n          value={email}\n          handleChange={handleChange}\n          {...fields.email}\n        />\n        <TextInput\n          value={password}\n          handleChange={handleChange}\n          {...fields.password}\n        />\n        <Button>Register</Button>\n      </form>\n    </>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from \"components/modules/RegisterForm/RegisterForm\";\n\nconst RegisterPage = () => {\n    return (\n        <div>\n            <h1>RegisterPage</h1>\n            <RegisterForm/>\n        </div>\n    )\n}\n\nexport default RegisterPage;\n"],"names":["label","handleChange","props","source","excluded","key","i","target","objectWithoutPropertiesLoose","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","id","useMemo","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","className","css","htmlFor","onChange","initialState","onSubmit","useState","state","setState","prevState","name","value","type","checked","newValue","handleSubmit","event","preventDefault","email","password","required","autoComplete","placeholder","children","useForm","fields"],"sourceRoot":""}