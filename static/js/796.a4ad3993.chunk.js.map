{"version":3,"file":"static/js/796.a4ad3993.chunk.js","mappings":"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","sources":["components/modules/RegisterForm/fields.js","components/modules/RegisterForm/initialState.js","webpack://react-homework-template/./src/components/shared/Button/button.module.css?30fa","components/shared/Button/Button.jsx","webpack://react-homework-template/./src/components/shared/TextField/text-field.module.css?05ad","components/shared/TextField/TextField.jsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/nanoid/index.browser.js","hooks/useForm.js","components/modules/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx","webpack://react-homework-template/./src/components/modules/RegisterForm/register-form.module.css?4ac4"],"sourcesContent":["const fields = {\n  name: {\n    type: 'text',\n    required: true,\n    autoComplete: 'off',\n    placeholder: 'Name',\n    label: 'User name',\n  },\n  email: {\n    type: 'text',\n    required: true,\n    autoComplete: 'off',\n    placeholder: 'Email',\n    label: 'User email',\n  },\n  password: {\n    type: 'text',\n    required: true,\n    autoComplete: 'off',\n    placeholder: 'Password',\n    label: 'User password',\n  },\n};\n\nexport default fields;\n","const initialState = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n}\n\nexport default initialState;","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"button_btn__zbgd-\"};","import css from './button.module.css';\n\nconst Button = ({ children, type = 'submit' }) => {\n  return (\n    <button type={type} className={css.btn}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"text-field_wrapper__F5-wH\",\"label\":\"text-field_label__7jSYo\",\"input\":\"text-field_input__zcppx\"};","import { useMemo } from 'react';\nimport { nanoid } from 'nanoid';\nimport css from './text-field.module.css';\n\nconst TextInput = ({ label, handleChange, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n  return (\n    <div className={css.wrapper}>\n      <label htmlFor={id} className={css.label}>{label}</label>\n      <input id={id} onChange={handleChange} {...props} className={css.input} />\n    </div>\n  );\n};\n\nexport default TextInput;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { useState } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    setState(prevState => {\n      const { name, value, type, checked } = target;\n      const newValue = type === 'chekbox' ? checked : value;\n\n      return { ...prevState, [name]: newValue };\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\nexport default useForm;\n","import TextInput from 'components/shared/TextField/TextField';\nimport useForm from 'hooks/useForm';\nimport initialState from './initialState';\nimport fields from './fields';\nimport css from './register-form.module.css';\nimport Button from 'components/shared/Button/Button';\n\nconst RegisterForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n  const { name, email, password } = state;\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={css.form}>\n        <TextInput value={name} handleChange={handleChange} {...fields.name} />\n        <TextInput\n          value={email}\n          handleChange={handleChange}\n          {...fields.email}\n        />\n        <TextInput\n          value={password}\n          handleChange={handleChange}\n          {...fields.password}\n        />\n        <Button>Register</Button>\n      </form>\n    </>\n  );\n};\n\nexport default RegisterForm;\n","import Title from '../../components/shared/Title/Title'\nimport RegisterForm from \"components/modules/RegisterForm/RegisterForm\";\n\nconst RegisterPage = () => {\n    return (\n        <div>\n            <Title>Register page</Title>\n            <RegisterForm/>\n        </div>\n    )\n}\n\nexport default RegisterPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"register-form_form__7sl83\"};"],"names":["name","type","required","autoComplete","placeholder","label","email","password","children","className","css","handleChange","props","source","excluded","key","i","target","objectWithoutPropertiesLoose","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","id","useMemo","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","htmlFor","onChange","initialState","onSubmit","useState","state","setState","prevState","value","checked","newValue","handleSubmit","event","preventDefault","useForm","fields","Button","Title"],"sourceRoot":""}